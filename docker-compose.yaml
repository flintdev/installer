version: '3'

services:
  kind:
    image: flintdev/flint-kind-dind
    privileged: true
    command: python3 /app/flint-kind-health-check.py
    volumes:
      - ./:/application
      - root:/root
    expose:
      - 8000
    networks:
      - docker_network

  ui-install-build:
    image: flintdev/flint-ui
    command: bash -c "npm install && npm run build-dev"
    working_dir: /application/src/ui
    networks:
      - docker_network
    volumes:
      - ./:/application
      - root:/root

  ui:
    image: flintdev/flint-ui
    command:  ./wait-for-ui-install-builder.sh -- node /application/dist/server.js
    working_dir: /app
    networks:
      - docker_network
    volumes:
      - ./:/application
      - root:/root
    expose:
      - 8080
    depends_on:
      - ui-install-build
    ports:
      - 9090:8000

  workflow-engine:
    image: flintdev/flint-workflow-engine
    command: bash -c "go get github.com/githubnemo/CompileDaemon && CompileDaemon -directory=/application/src/controllers/workflowEngine -build='go build main.go' -command='./main'"
    working_dir: /application/src/controllers/workflowEngine
    networks:
      - docker_network
    expose:
      - 8080
    volumes:
      - ./:/application
      - root:/root

  python-executor:
    image: flintdev/flint-python-executor
    command: python app.py
    working_dir: /application/src/controllers/executors
    environment:
      DEBUG: "true"
    networks:
      - docker_network
    expose:
      - 8080
    volumes:
      - ./:/application
      - root:/root

  admin-service:
    image: flintdev/flint-admin-service
    command: python app.py
    working_dir: /application/src/controllers/admin
    environment:
      DEBUG: "true"
    networks:
      - docker_network
    expose:
      - 8080
    volumes:
      - ./:/application
      - root:/root

  health-check:
    image: flintdev/flint-service-health-check
    volumes:
      - ./:/application
    networks:
      - docker_network
    working_dir: /application
    command: python /app/watcher.py

volumes:
  root:

networks:
  docker_network:
    driver: bridge
